# name: Build and Release

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: windows-latest
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.12'
#           cache: 'pip'
#           cache-dependency-path: requirements.txt
      
#       - name: Install dependencies
#         run: |
#           pip install -r requirements.txt;

#       - name: Check Python Version and Packages
#         run: |
#           python --version; pip list;
  
#       - name: Build executable with Nuitka
#         run: |
#           Write-Host "Running Nuitka build script"; python -u .\tools\build_nuitka.py

#       - name: Upload Artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: ytmtools
#           path: |
#             ytmtools.dist/*

#   release:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v4

#       - name: Download Build Artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: ytmtools.dist

#       - name: List Files in Directory
#         run: ls -R /home/runner/work/${{ github.repository }}/ytmtools.dist

#       - name: Zip the Build Directory
#         run: |
#           cd /home/runner/work/${{ github.repository }}/ytmtools.dist
#           zip -r ytmtools.zip .

#       - name: Validate .zip
#         run: |
#           cd /home/runner/work/${{ github.repository }}/ytmtools.dist
#           if [ -f "ytmtools.zip" ]; then
#             echo "Executable found"
#           else
#             echo "Executable not found"
#             exit 1
#           fi

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Generate Release Notes
#         id: generate_notes
#         run: |
#           npm install -g conventional-changelog-cli
#           changelog=$(conventional-changelog -p angular -i CHANGELOG.md -s -r 0)
#           echo "notes=$changelog" >> $GITHUB_ENV

#       - name: Create GitHub Release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: ytmtools.zip
#           tag_name: v1.0.1
#           release_name: "Release v1.0.0"
#           body: ${{ env.notes }}
#           prerelease: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_Token }}   